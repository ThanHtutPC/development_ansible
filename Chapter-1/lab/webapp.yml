---
- name: Deploy a web application 
  hosts: webservers
  become: true 

  tasks: 
    - name: Install the webservers
      ansible.builtin.yum: 
        name: "{{ web_package }}"
        state: latest
      
    - name: Start the webservers 
      ansible.builtin.service: 
        name: "{{ web_service }}"
        state: started 
        enabled: true
    
    - name: Enabled the "{{ web_fw_service }}" service in the firewall 
      ansible.posix.firewalld:
        name: "{{ web_fw_service }}"
        state: enabled
        immediate: true
        permanent: true 
    
- name: deploy the db servers 
  hosts: dbservers
  tasks: 

    - name: install the db packages 
      ansible.builtin.yum: 
        name: "{{ db_package }}"
        state: latest

    - name: enable the db service 
      ansible.builtin.service:
        name: "{{ db_service }}" 
        state: started 
        enabled: true 

    - name: enable the "{{ db_fw_package }}" service in the firewall 
      ansible.posix.firewalld: 
        name: "{{ db_fw_service }}"
        state: enabled
        permanent: true
        immediate: true

- name: test web application
  hosts: webservers
  tasks: 
    
    - name: web application test 
      block: 
        - name: Check web application 
          ansible.builtin.uri: 
            url:  http://{{ item }}
          loop: "{{ groups['webservers'] }}"
      
      rescue: 
        - name: restart the webservers 
          ansible.builtin.service: 
            name: "{{ web_service }}"
            state: restarted
...




